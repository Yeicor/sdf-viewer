[package]
name = "sdf-viewer"
version = "0.0.41"
authors = ["Yeicor <yeicor1212@gmail.com>"]
description = "SDF Viewer"
repository = "https://github.com/Yeicor/sdf-viewer"
license = "MIT or Apache-2.0"
edition = "2021"

[lib]
crate-type = ["cdylib"] # Required for web (and Android...). Also publishes the sdf module.

[features]
# By default build the app and the server (if not on wasm).
default = ["app", "server", "native"]

# === ARCH-BASED FEATURES (only to select dependencies' features) ===
web = ["wasmer/js-default", "wasmer-wasi/js", "poll-promise/web"]
native = ["wasmer/sys", "wasmer/default-singlepass", # TODO: Faster wasm runtime that is slower to compile?
    "wasmer/default-universal", "wasmer-wasi/sys", "poll-promise/tokio"]

# === FUNCTIONALITY-BASED FEATURES ===
# The whole app that renders SDFs.
app = ["standalone", "sdf", "sdfdemo", # <-- other features
    "three-d", "eframe", "egui_glow", "image", "ehttp", "wasmer", "wasmer-wasi", "anyhow", "klask"]

# The simple server to watch and serve files to the app.
server = ["standalone", "salvo", "notify", "anyhow", "httpdate", "lru", "tokio/process"]

# An executable that runs a program instead of providing an API, i.e., an app and/or a server
standalone = [
    "instant", "wasm-bindgen", "wasm-bindgen-futures", "web-sys", "tracing-wasm", "tracing-subscriber", "once_cell",
    "console_error_panic_hook", "tracing", "profiling", "shadow-rs", "tokio", "poll-promise", "clap"]

# The main SDF trait. Useful for using as a library (remember to disable default features).
sdf = ["auto_impl", "cgmath", "clap"]

# Declares the demo SDF.
sdfdemo = ["sdf"]

# Publishes the demo SDF through FFI to be able to export it as a WASM file to be interpreted by the app.
sdfdemoffi = ["sdfdemo"]

# ========== DEPENDENCIES ==========
[dependencies]
# === RENDERING ===
three-d = { version = "0.12", default-features = false, features = [], optional = true }
eframe = { version = "0.18", features = ["persistence"], optional = true }
egui_glow = { version = "0.18", optional = true }
image = { version = "0.24", optional = true }  # Required for image loading

# === LOGGING & PROFILING (see also native/web dependencies) ===
tracing = { version = "0.1", optional = true }
profiling = { version = "1.0", features = ["profile-with-tracing"], optional = true } # Provides simpler macro for functions

# === APP HTTP CLIENT ===
ehttp = { version = "0.2", optional = true } # Very simple HTTP client that supports web

# === SERVER ===
salvo = { version = "0.28", optional = true } # Simple HTTP server
notify = { version = "4.0", optional = true } # Watch for file changes
httpdate = { version = "1.0", optional = true } # Formatting of dates
lru = { version = "0.7", optional = true } # For caching resources

# === WEBASSEMBLY COMPILERS/INTERPRETERS ===
wasmer = { git = "https://github.com/Yeicor/wasmer", branch = "2.3.0-async", default-features = false, optional = true } # Very fast WebAssembly runtime for x86_64, wasm32 and ARM64
# Wasmer includes a patch to perform asynchronous compilation and instantiation of WASM modules (to work around chrome's enforced main thread compilation size limit).
wasmer-wasi = { git = "https://github.com/Yeicor/wasmer", branch = "2.3.0-async", default-features = false, optional = true, features = ["mem-fs", "logging"] } # WASI runtime for wasmer

# === CONFIGURATION & CLI ===
clap = { version = "3.2", features = ["derive"], optional = true } # CLI parser
klask = { git = "https://github.com/Yeicor/klask", branch = "all-my-requests", optional = true }  # CLI to GUI converter
shadow-rs = { version = "0.16", default-features = false, optional = true } # Web does not support the git2 optional dependency, which is unnecessary

# === MISC ===
auto_impl = { version = "1.0", optional = true } # Automatic trait implementations for Box<_>, &_, etc.
instant = { version = "0.1", default-features = false, features = ["wasm-bindgen"], optional = true } # Cross platform current time
cgmath = { version = "0.18", optional = true } # Math library (shared with three-d)
anyhow = { version = "1.0", optional = true } # Error handling
poll-promise = { git = "https://github.com/EmbarkStudios/poll-promise/", rev = "49daf6c1b91be2dbfe59d41ae5547909268c6d46", optional = true } # Polls a future until it resolves
once_cell = { version = "1.13", optional = true } # Static globals with lazy initialization

# === NATIVE (desktop & mobile) ===
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tokio = { version = "1.20", features = ["macros", "rt-multi-thread", "sync"], optional = true } # Asynchronous runtime
tracing-subscriber = { version = "0.3", optional = true } # For logging

# === WEB ===
[target.'cfg(target_arch = "wasm32")'.dependencies] # Web dependencies
wasm-bindgen = { version = "0.2", optional = true } # Core bindings
wasm-bindgen-futures = { version = "0.4", optional = true } # Core bindings
web-sys = { version = "0.3", optional = true } # Core bindings
tracing-wasm = { version = "0.2", optional = true } # For logging
console_error_panic_hook = { version = "0.1", optional = true } # For logging

# === TESTING ===
[dev-dependencies]
approx = "0.5"

# === BUILD ===
[build-dependencies]
shadow-rs = "0.16" # For build metadata

# ========== RELEASE CONFIGURATION ==========
[profile.release]
lto = true
codegen-units = 1
strip = true

[package.metadata.wasm-pack.profile.release]
wasm-opt = false # https://github.com/rustwasm/wasm-pack/issues/781 (enable this if it works for you, but it fails on CI)
